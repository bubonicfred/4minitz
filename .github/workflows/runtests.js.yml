name: 4Minitz TestRunner
on: [push, pull_request]

jobs:
  UnitTestsAndI18n:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Cache Node modules directory
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/setup-node@v4
        with:
          node-version: "18.13.0"
          cache: "npm"
          cache-dependency-path: "package-lock.json"
      - run: sudo apt-get install gcc-12 g++ build-essential -y --option Acquire::Retries=100 --option Acquire::http::Timeout="300"
      - run: sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 50
      - run: curl https://install.meteor.com | /bin/sh
      - run: pwd
      - run: |
          sudo wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          sudo echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-org
          mongodump --version
      - run: meteor --version
      - run: npm install
      - run: npm run test:unit
      - name: Report results to DeepSource
        run: |
          # Tests have finished and a test coverage report is available
          # Install deepsource CLI
          curl https://deepsource.io/cli | sh
          # From the root directory, run the report coverage command
          ./bin/deepsource report --analyzer test-coverage --key javascript --value-file ./coverage/cobertura-coverage.xml
        env:
         DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
      - run: npm run test:i18n

  End2EndTests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true # When set to true, GitHub cancels all in-progress jobs if any matrix job fails. Default: true
      matrix: # max. 20 concurrent jobs https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#usage-limits
        e2etest:
          - MeetingSeries-test.js
          - MeetingSeriesEdit-test.js
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "^14.21.3"
          cache: "npm"
          cache-dependency-path: "package-lock.json"
      - run: sudo apt-get install gcc-12 g++ build-essential -y --option Acquire::Retries=100 --option Acquire::http::Timeout="300"
      - run: sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 50

      - run: |
          sudo wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          sudo echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-org
          mongodump --version

      - run: curl https://install.meteor.com | /bin/sh
      - run: pwd
      - run: node --version
      - run: meteor --version
      - name: Cache Node modules directory
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm install
      - run: mkdir ./tests/mongodump
      - run: ./tests/run_e2e.sh tests/end2end/${{ matrix.e2etest }}
      - name: Upload E2E Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: E2E Artifacts-${{ matrix.e2etest }}
          path: |
            tests/snapshots
            tests/end2end/logs
            tests/mongodump
          overwrite: true
